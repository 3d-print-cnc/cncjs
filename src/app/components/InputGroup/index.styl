// FIXME
// https://github.com/twbs/bootstrap/blob/v4.2.1/scss/_variables.scss
//

@import "reset-context";
@import "variables";

//
// Base styles
//

.input-group {
    reset-context();

    position: relative;
    display: flex;
    flex-wrap: wrap;
    align-items: stretch;
    width: 100%;

    > .input-group-item {
        position: relative; // For focus state's z-index
        flex: 1 1 auto;
        // Add width 1% and flex-basis auto to ensure that button will not wrap out
        // the column. Applies to IE Edge+ and Firefox. Chrome does not require this.
        width: 1%;
        margin-bottom: 0;

        // Add width 1% and flex-basis auto to ensure that button will not wrap out
        // the column. Applies to IE Edge+ and Firefox. Chrome does not require this.
        width: 1%;
        margin-bottom: 0;

        // Bring the "active" form control to the top of surrounding elements
        &:focus {
            z-index: 3;
        }

        + .input-group-item {
            margin-left: -($input-border-width);
        }
    }

    > .input-group-item {
        &:not(:last-child) {
            border-top-right-radius: 0;
            border-bottom-right-radius: 0;
        }
        &:not(:first-child) {
            border-top-left-radius: 0;
            border-bottom-left-radius: 0;
        }
    }
}

//
// Prepend and append
//

.input-group-prepend,
.input-group-append {
    display: flex;

    .input-group-text + .input-group-text {
        margin-left: -($input-border-width);
    }
}

.input-group-prepend {
    margin-right: -($input-border-width);
}
.input-group-append {
    margin-left: -($input-border-width);
}

//
// Textual addons
//

.input-group-text {
    display: flex;
    align-items: center;
    padding: $input-padding-y $input-padding-x;
    margin-bottom: 0; // Allow use of <label> elements by overriding our default margin-bottom
    font-size: $font-size-base; // Match inputs
    font-weight: $font-weight-normal;
    line-height: $input-line-height;
    color: $input-group-text-color;
    text-align: center;
    white-space: nowrap;
    background-color: $input-group-text-background-color;
    border: $input-border-width solid $input-group-text-border-color;
    if ($enable-rounded) {
        border-radius: $input-border-radius;
    }

    // Nuke default margins from checkboxes and radios to vertically center within.
    input[type="radio"],
    input[type="checkbox"] {
        margin-top: 0;
    }
}

//
// Sizing
//

.input-group-lg > .form-control,
.input-group-lg > .input-group-prepend > .input-group-text,
.input-group-lg > .input-group-append > .input-group-text {
    height: $input-height-lg;
    padding: $input-padding-y-lg $input-padding-x-lg;
    font-size: $input-font-size-lg;
    line-height: $input-line-height-lg;
    if ($enable-rounded) {
        border-radius: $input-border-radius-sm;
    }
}

.input-group-sm > .form-control,
.input-group-sm > .input-group-prepend > .input-group-text,
.input-group-sm > .input-group-append > .input-group-text {
    height: $input-height-sm;
    padding: $input-padding-y-sm $input-padding-x-sm;
    font-size: $input-font-size-sm;
    line-height: $input-line-height-sm;
    if ($enable-rounded) {
        border-radius: $input-border-radius-sm;
    }
}

//
// Prepend and append rounded corners
//

.input-group > .input-group-prepend > .input-group-text,
.input-group > .input-group-append:not(:last-child) > .input-group-text,
.input-group > .input-group-append:last-child > .input-group-text:not(:last-child) {
    if ($enable-rounded) {
        border-top-right-radius: 0;
        border-bottom-right-radius: 0;
    }
}

.input-group > .input-group-append > .input-group-text,
.input-group > .input-group-prepend:not(:first-child) > .input-group-text,
.input-group > .input-group-prepend:first-child > .input-group-text:not(:first-child) {
    if ($enable-rounded) {
        border-top-left-radius: 0;
        border-bottom-left-radius: 0;
    }
}
